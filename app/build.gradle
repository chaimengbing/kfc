apply plugin: 'com.android.application'
//apply plugin: 'com.google.protobuf'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.auw.kfc"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

//    signingConfigs {
//        config {
//            keyAlias 'railway'
//            keyPassword 'railway1116'
//            storeFile file('/railway.jks')
//            storePassword 'railway1116'
//        }
//
//    }

    sourceSets {
        main {
//            java {
//                srcDir 'src/main/java'
//            }
//            proto {
//                srcDir 'src/main/proto'
//            }
        }
    }

//    signingConfigs {
//        debug {
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }
//
//        release {
//            storeFile
//            storePassword
//            keyAlias
//            keyPassword
//            v1SigningEnabled true
//            v2SigningEnabled true
//        }
//    }
//
//    getSigningProperties()

    //自定义输出包名的设置
//    applicationVariants.all {
//        variant ->
//            variant.outputs.all {
//                // 输出apk名称
//                def fileName = "app_kfc_test_front_${defaultConfig.versionName}.apk"
//                outputFileName = fileName
//            }
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
//        debug {
//            debuggable true  //启用debug的buildType配置
//        }
//        //输出类型
//        applicationVariants.all {
//            //判断是release还是debug版本
//            def buildType = it.buildType.name
//            //获取当前时间的"YYYY-MM-dd"格式。
//            def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
//            //如果是正式包,将其输入到指定文件夹
//            if (buildType == "release") {
//                it.getPackageApplication().outputDirectory = new File('.\\release' + "/${createTime}")
//            }
//        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':SerialPortLibrary')

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'me.jessyan:autosize:0.9.5'
    implementation 'com.alibaba:fastjson:1.2.47'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.19'

    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:eventbus:3.1.1'

}

greendao {
    schemaVersion 1
    daoPackage 'com.auw.kfc.greendao'
    targetGenDir 'src/main/java'
    generateTests false
}


//读取签名配置文件
def getSigningProperties() {

    def propFile = file('signing.properties')
    if (propFile.canRead()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
                props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {

            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']

        } else {

            println 'signing.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'signing.properties not found'
        android.buildTypes.release.signingConfig = null
    }
}
